name: Release
on:
  push:
    branches:
      - '**'
    tags:
      - v[0-9]*

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Test code
      run: go test -v .

    - name: Slack notification
      if: success()
      uses: rtCamp/action-slack-notify@v2.0.2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: athena-cli
        SLACK_ICON_EMOJI: ':tada:'
        SLACK_TITLE: test success
        SLACK_COLOR: good
        SLACK_CHANNEL: api-test


  setup-release:
    name: Setup release
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Create release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: true

    - name: Get url to upload to release from output
      env:
        url: ${{ steps.create_release.outputs.upload_url }}
      run: |
        mkdir artifact
        echo $url > artifact/url.txt
    - name: Upload artifact to share url with other jobs
      uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: artifact/url.txt

  release-pkg:
    name: Release package
    needs: setup-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - linux
          - darwin
          - windows
        include:
        - os: linux
          goos: linux
          arch: amd64
        - os: darwin
          goos: darwin
          arch: amd64
        - os: windows
          goos: windows
          arch: amd64

    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Fetch tags
      run: git fetch --tags

    - name: Build
      env:
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.arch }}
      run: |
        GOOS=$goos GOARCH=$goarch make build
        chmod +x ./athena-cli
        zip -j -r release athena-cli

    - name: Download artifact to get url to upload to release
      uses: actions/download-artifact@v1
      with:
        name: artifact

    - name: Get url to upload to release from artifact
      id: get_url
      run: |
        url=$(cat artifact/url.txt)
        echo "##[set-output name=upload_url;]$url"

    - name: Upload release asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_url.outputs.upload_url }}
        asset_path: release.zip
        asset_name: athena-cli-${{ matrix.os }}.zip
        asset_content_type: application/zip
